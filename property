[display]
- Block : 길막 , 면
    따로 width를 선언하지 않은 경우, width = 부모의 content-box의 100%
    따로 width를 선언한 경우, 남은 공간은 margin으로 자동으로 채운다.

    따로 부모의 height를 선언하지 않은 경우, 자식요소의 height의 합 = 부모의 height

    width, height, padding, border, margin 다 쓸 수 있다.

- Inline : 흐름, 선
    흐름을 방해 하는 width, height, padding-top, padding-bottom, border-top, border-bottom,
    margin-top, margin-bottom 사용 불가

- Inline-block : inline 장점 + block 장점

[float]
어떤 display 요소이던지 float시키면 Block 요소가 된다.
그런데 길막을 제대로 하지 못하는 Block이 된다...
부모의 width를 100% 가지는 것이 아니라 자신의 content 너비만큼만 차지한다.

Block 박스들은 float를 없는 취급하지만, Inline 박스들은 기가막히게 알아챈다.

자식요소가 다 float되면 부모요소는 자식이 다 집을 나갔다고 생각하고 height가 0이된다.
그런데,
1. 부모 요소에 overflow: hidden 을 주면 float된 자식들을 영역으로 생각한다.
2. 부모 요소의 마지막에 css로 가상요소를 만들고 clear property를 쓴다.
    clear는 block 요소에만 적용 가능
    가상 요소는 요소 당 두 개를 줄 수 있다. ::before, ::after
   .parent::after{
        content:"";
        display: block;
        clear: left;
   }

[position]
- relative
    붕뜨긴 하지만 부모 요소가 있던 자리를 기억하면서 레이아웃이 망가지지 않는다.
- absolute
    요소가 float 한 것처럼 길막 못하는 block으로 바뀐다.
    다만, 주변의 inline 요소들이 피하지 않고 무시한다.
    부모요소를 거슬러 올라가면서 position이 static이면 무시하고, relative, absolute, fixed, sticky이면
    기준으로 삼는다.
-fixed
    기준이 viewport
    width을 따로 주지 않으면 content만큼 줄어든다.


